import{aV as m,aW as g,aD as i}from"./index-CmuCMgBa.js";import{g as v}from"./QCardActions-CLJaF5Bu.js";import{A as y,r as S}from"./QSelect-B1fV5hfF.js";const O=m(()=>{const{addToAutocomplete:s}=y();Array.from({length:15},(e,t)=>t+1).forEach(e=>localStorage.removeItem(`recipes-v${e}`));const o=g("recipes-v16",S),d=async e=>{await Promise.all([s("category",e.category?[e.category]:[]),s("ingredients",e.ingredients.map(r=>r.name))]),await i();const t=new Date().toISOString(),a={...e,id:crypto.randomUUID(),favorite:!1,createdAt:t,updatedAt:t};return o.value.push(a),a},p=async(e={})=>(await i(),v(o.value,e)),u=async e=>{o.value=o.value.filter(t=>t.id!==e)},c=async e=>{const t=o.value.find(a=>a.id===e);return t?JSON.parse(JSON.stringify(t)):void 0},f=async(e,t)=>(await Promise.all([s("category",t.category?[t.category]:[]),s("ingredients",t.ingredients?.map(a=>a.name))]),await i(),o.value=o.value.map(a=>{if(a.id!==e)return a;const r=new Date().toISOString();return a.id===e?JSON.parse(JSON.stringify({...a,...t,updatedAt:r})):a}),c(e));async function l(e,t,a){const r=o.value.find(n=>n.id===e);r&&(r.folders||(r.folders=[]),a==="remove"&&(r.folders=r.folders.filter(n=>!t.includes(n))),a==="add"&&(r.folders=[...new Set([...r.folders,...t])]))}return{removeRecipe:u,getRecipeById:c,editRecipe:f,getRecipes:p,creteRecipe:d,recipes:o,updateRecipeFolders:l}});export{O as R};
